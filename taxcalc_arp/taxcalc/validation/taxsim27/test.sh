#!/bin/bash
# Executes one TAXSIM-27 validation test as follows:
# (1) generate a random sample of tax filing units (INPUT),
# (2) generate TC_OUTPUT from INPUT using taxcalc.py INPUT, and
# (3) generate tax-difference tabulations by comparing TC_OUTPUT with
#     output file generated by TAXSIM-27 using the INPUT
#
# USAGE: ./test.sh LYY [save]
#
# Check command-line arguments
if [[ "$#" -lt 1 || "$#" -gt 2 ]]; then
    echo "ERROR: number of command-line arguments not in 1-to-2 range"
    echo "USAGE: ./test.sh LYY [save]"
    echo "       WHERE L is a letter that is valid taxsim_input.py L input and"
    echo "             YY is valid taxsim_input.py YEAR (20YY) input;"
    echo "       WHERE the 'save' option skips the deletion of INPUT and"
    echo "             OUTPUT files at the end of the test"
    exit 1
fi
LYY=$1
SAVE=""
if [[ "$#" -eq 2 ]]; then
    if [[ "$2" == "save" ]]; then
        SAVE="save"
    else
        echo "ERROR: optional second command-line argument must be 'save'"
        echo "USAGE: ./test.sh LYY [save]"
        exit 1
    fi
fi
# (1) generate specified INPUT file
L=${LYY:0:1}    
YY=${LYY:1:2}
python taxsim_input.py 20$YY $L > $LYY.in
if [[ $? -ne 0 ]]; then
    echo "ERROR: taxsim_input.py failed"
    exit 1
fi
# (2) generate TAXSIM-27-formatted output using Tax-Calculator tc CLI
python taxcalc.py $LYY.in
if [[ $? -ne 0 ]]; then
    echo "ERROR: taxcalc.py failed"
    exit 1
fi
# (3) generate tax differences
# ... unzip TAXSIM-27 OUTPUT for specified INPUT
unzip -oq output-taxsim.zip $LYY.in.out-taxsim
# ... compare Tax-Calculator OUTPUT and TAXSIM-27 OUTPUT files
tclsh taxdiffs.tcl $LYY.in.out-taxcalc $LYY.in.out-taxsim > $LYY.taxdiffs-actual
if [[ $? -ne 0 ]]; then
    echo "ERROR: taxdiffs.tcl failed"
    exit 1
fi
# check for difference between LYY.taxdiffs-actual and LYY.taxdiffs-expect
diff --brief $LYY.taxdiffs-actual $LYY.taxdiffs-expect
RC=$?
BOLD=$(tput bold)
NORMAL=$(tput sgr0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
if [[ $RC -ne 0 ]]; then
    MSG="DIFF $LYY"
    printf "$BOLD$RED$MSG$NORMAL\n"
else
    MSG="SAME $LYY"
    printf "$BOLD$GREEN$MSG$NORMAL\n"
    if [[ "$SAVE" == "" ]] ; then
        rm -f $LYY.taxdiffs-actual
    fi
fi
# remove temporary files
rm -f $LYY.in-$YY-#-#-#-doc.text
if [[ "$SAVE" == "" ]] ; then
    rm -f $LYY.in $LYY.in.csv $LYY.in-$YY-#-#-#.csv \
          $LYY.in.out-taxcalc $LYY.in.out-taxsim
fi
exit $RC
